{"ast":null,"code":"import NavBar from '../components/NavBar.vue';\nimport setAdmin from '../Services/auth_service.js';\nimport setUser from '../Services/auth_service.js'; // @ is an alias to /src\n\nconst axios = require('axios');\n\nexport default {\n  name: \"Register\",\n  components: {\n    NavBar\n  },\n  data: () => {\n    return {\n      firstname: \"\",\n      lastname: \"\",\n      username: \"\",\n      email: \"\",\n      avatar: \"\",\n      password: \"\",\n      password_confirmation: \"\"\n    };\n  },\n  methods: {\n    async signin(event) {\n      event.preventDefault();\n      const preview = document.querySelector('avatar');\n      const file = document.querySelector('input[type=file]').files[0];\n      const reader = new FileReader();\n      let avatarUser = '';\n      await reader.addEventListener(\"load\", async () => {\n        // on convertit l'image en une chaîne de caractères base64\n        avatarUser = reader.result;\n        console.log(avatarUser);\n        fetch(avatarUser).then(res => res.blob()).then(blob => {\n          console.log(blob);\n          axios.post(\"http://localhost:3000/users\", {\n            firstname: this.firstname,\n            lastname: this.lastname,\n            username: this.username,\n            email: this.email,\n            avatar: avatarUser,\n            password: this.password,\n            password_confirmation: this.password_confirmation\n          });\n        }).then(response => {\n          // console.log('table')\n          // console.table([this.title,\n          // this.user_id,\n          // this.category_id,\n          // this.content,\n          // this.img_post])\n          // console.log(response.data);\n          var result = response.data;\n\n          if (result != null) {\n            alert(\"User bien créé!\");\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }, false);\n\n      if (file) {\n        await reader.readAsDataURL(file);\n        console.log(reader);\n        console.log(avatarUser);\n        localStorage.setItem('admin', '1');\n        localStorage.setItem('user', '0');\n        this.$router.push(\"/\");\n      }\n\n      axios.get(\"http://localhost:3000/users\", {}).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        alert(error);\n        console.log(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["NavBar","setAdmin","setUser","axios","require","name","components","data","firstname","lastname","username","email","avatar","password","password_confirmation","methods","signin","event","preventDefault","preview","document","querySelector","file","files","reader","FileReader","avatarUser","addEventListener","result","console","log","fetch","then","res","blob","post","response","alert","catch","error","readAsDataURL","localStorage","setItem","$router","push","get"],"sourceRoot":"","sources":["/home/fanny/Rendu2/C-COD-280-PAR-2-2-dashboard-vladimira.grosjean/Dashboard2/src/views/Register.vue"],"sourcesContent":["<template>\n\n<div class=\"container\">\n  <NavBar />\n  <div class=\"container loginForm\">\n  <!-- Pills navs -->\n<ul class=\"nav nav-pills nav-justified mb-3\" id=\"ex1\" role=\"tablist\">\n  \n</ul>\n<!-- Pills navs -->\n\n<!-- Pills content -->\n<div class=\"tab-content\">\n\n    <form>\n\n\n      <!-- Firstname input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"firstname\" type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Firstname\">\n    </div>\n\n     <!-- Lastname input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"lastname\" type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Lastname\">\n    </div>\n\n      <!-- Username input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Username\">\n    </div>\n\n      <!-- Email input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"email\" type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Email\">\n    </div>\n\n      <!-- Password input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Password\">\n    </div>\n\n      <!-- Repeat Password input -->\n        <div class=\"form-group mb-2\">\n    <input v-model=\"password_confirmation\" type=\"password\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Password\">\n    </div>\n\n      <!-- Image Upload -->\n      <div class=\"form-outline mb-4\">\n        <label style=\"float: left; font-weight: bold;\" class=\"form-label\" for=\"avatar\">Choose your Avatar</label>\n        <input type=\"file\" v-on:change=\"getImgPost\" id=\"avatar\" class=\"form-control border\" />\n      </div>\n\n      <!-- Checkbox -->\n      <div class=\"form-check d-flex justify-content-center mb-4\">\n        <input\n          class=\"form-check-input me-2\"\n          type=\"checkbox\"\n          value=\"\"\n          id=\"registerCheck\"\n          checked\n          aria-describedby=\"registerCheckHelpText\"\n        />\n        <label class=\"form-check-label\" for=\"registerCheck\">\n          I have read and agree to the terms\n        </label>\n      </div>\n\n      <!-- Submit button -->\n      <button @click=\"signin\" type=\"submit\" class=\"btn btn-primary btn-block mb-3\">Sign in</button>\n    </form>\n\n</div>\n</div>\n  </div>\n</template>\n\n<script>\nimport NavBar from '../components/NavBar.vue';\nimport setAdmin from '../Services/auth_service.js';\nimport setUser from '../Services/auth_service.js';\n\n// @ is an alias to /src\nconst axios = require('axios');\nexport default {\n  name: \"Register\",\n  components: {NavBar},\n  data: () => {\n    return {\n      firstname: \"\",\n      lastname: \"\",\n      username:\"\",\n      email: \"\",\n      avatar:\"\",\n      password: \"\",\n      password_confirmation: \"\",\n    };\n  },\n  methods: {\n    async signin(event) {     \n      event.preventDefault();\n      const preview = document.querySelector('avatar');\n        const file = document.querySelector('input[type=file]').files[0];\n        const reader = new FileReader();\n        let avatarUser = '';\n        await reader.addEventListener(\"load\", async () => {\n          // on convertit l'image en une chaîne de caractères base64\n          avatarUser = reader.result;\n          console.log(avatarUser);\n          fetch(avatarUser)\n          .then(res => res.blob())\n          .then(blob => {\n            console.log(blob)\n             axios.post(\"http://localhost:3000/users\", {\n                firstname: this.firstname,\n                lastname: this.lastname,\n                username:this.username,\n                email: this.email,\n                avatar: avatarUser,\n                password: this.password,\n                password_confirmation: this.password_confirmation\n            })          \n        })\n        .then((response) => {\n          // console.log('table')\n          // console.table([this.title,\n          // this.user_id,\n          // this.category_id,\n          // this.content,\n          // this.img_post])\n          // console.log(response.data);\n          \n          var result = response.data;\n          if (result != null) {\n            alert(\"User bien créé!\");\n            \n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        }, false);\n\n        if (file) {\n          await reader.readAsDataURL(file);\n          console.log(reader);\n          console.log(avatarUser);\n          localStorage.setItem('admin', '1');\n          localStorage.setItem('user', '0');\n          this.$router.push(\"/\");\n\n          \n    }\n        axios\n          .get(\"http://localhost:3000/users\", {})\n          .then((response) => {\n            console.log(response.data);\n          })\n          .catch((error) => {\n            alert(error);\n            console.log(error);\n          });\n          \n    },\n  },\n};\n</script>\n<style>\n.loginForm{\n  width: 50%;\n  margin-top: 150px;\n}\n</style>\n\nasync signin(event) {     \n      event.preventDefault();\n      const preview = document.querySelector('avatar');\n        const file = document.querySelector('input[type=file]').files[0];\n        const reader = new FileReader();\n        let avatarUser = '';\n        await reader.addEventListener(\"load\", async () => {\n          // on convertit l'image en une chaîne de caractères base64\n          avatarUser = reader.result;\n          console.log(avatarUser);\n          fetch(avatarUser)\n          .then(res => res.blob())\n          .then(blob => {\n            console.log(blob)\n             axios.post(\"http://localhost:8000/api/users\", {\n                name: this.name,\n                nickname:this.nickname,\n                email: this.email,\n                avatar: avatarUser,\n                password: this.password,\n                password_confirmation: this.password_confirmation\n            })          \n        })\n        .then((response) => {\n          // console.log('table')\n          // console.table([this.title,\n          // this.user_id,\n          // this.category_id,\n          // this.content,\n          // this.img_post])\n          // console.log(response.data);\n          var result = response.data;\n          if (result != null) {\n            alert(\"User bien créé!\");\n            location.reload();\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        }, false);\n\n        if (file) {\n          await reader.readAsDataURL(file);\n          console.log(reader);\n          console.log(avatarUser);\n          \n    }\n        axios\n          .get(\"http://localhost:8000/api/users\", {})\n          .then((response) => {\n            console.log(response.data);\n          })\n          .catch((error) => {\n            alert(error);\n            console.log(error);\n          });\n          \n    },\n  },\n};"]},"metadata":{},"sourceType":"module"}