{"ast":null,"code":"const axios = require(\"axios\");\n\nexport default {\n  name: \"post\",\n  components: {},\n  props: ['idUser', 'user_id'],\n  data: () => {\n    return {\n      title: \"\",\n      user_id: \"\",\n      category_id: \"\",\n      content: \"\",\n      img_post: \"\",\n      categorie: \"\"\n    };\n  },\n  methods: {\n    closeCreatePost() {\n      this.$emit('close');\n    },\n\n    async post(event) {\n      event.preventDefault();\n      console.log(this.user_id);\n      const preview = document.querySelector('img_post');\n      const file = document.querySelector('input[type=file]').files[0];\n      const reader = new FileReader();\n      let image = '';\n      await reader.addEventListener(\"load\", async () => {\n        // on convertit l'image en une chaîne de caractères base64\n        image = reader.result;\n        console.log(image);\n        fetch(image).then(res => res.blob()).then(blob => {\n          console.log(blob);\n          axios.post(\"http://localhost:8000/api/posts\", {\n            title: this.title,\n            user_id: '',\n            category_id: this.categorie,\n            content: this.content,\n            img_post: image\n          });\n        }).then(response => {\n          console.log('table');\n          console.table([this.title, this.user_id, this.category_id, this.content, this.img_post]);\n          console.log(response.data);\n          var result = response.data;\n\n          if (result != null) {\n            alert(\"Post bien créé!\");\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }, false);\n\n      if (file) {\n        await reader.readAsDataURL(file);\n        setTimeout(() => {\n          location.reload();\n        }, 2000);\n      }\n\n      axios.get(\"http://localhost:8000/api/posts\", {}).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        alert(error);\n        console.log(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqCA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAD,CAArB;;AACA,eAAe;AACbC,MAAI,EAAE,MADO;AAEbC,YAAU,EAAE,EAFC;AAGZC,OAAK,EAAE,CAAC,QAAD,EAAW,SAAX,CAHK;AAIbC,MAAI,EAAE,MAAM;AACV,WAAO;AACLC,WAAK,EAAE,EADF;AAELC,aAAO,EAAE,EAFJ;AAGLC,iBAAW,EAAE,EAHR;AAILC,aAAO,EAAE,EAJJ;AAKLC,cAAQ,EAAE,EALL;AAMLC,eAAS,EAAE;AANN,KAAP;AAQD,GAbY;AAcbC,SAAO,EAAE;AACPC,mBAAe,GAAE;AACf,WAAKC,KAAL,CAAW,OAAX;AACD,KAHM;;AAIP,UAAMC,IAAN,CAAWC,KAAX,EAAkB;AAChBA,WAAK,CAACC,cAAN;AACAC,aAAO,CAACC,GAAR,CAAY,KAAKZ,OAAjB;AACA,YAAMa,OAAM,GAAIC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACE,YAAMC,IAAG,GAAIF,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CE,KAA3C,CAAiD,CAAjD,CAAb;AACA,YAAMC,MAAK,GAAI,IAAIC,UAAJ,EAAf;AACA,UAAIC,KAAI,GAAI,EAAZ;AACA,YAAMF,MAAM,CAACG,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AAChD;AACAD,aAAI,GAAIF,MAAM,CAACI,MAAf;AACAX,eAAO,CAACC,GAAR,CAAYQ,KAAZ;AACAG,aAAK,CAACH,KAAD,CAAL,CACCI,IADD,CACMC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAG,IAAK;AACZf,iBAAO,CAACC,GAAR,CAAYc,IAAZ;AACCjC,eAAK,CAACe,IAAN,CAAW,iCAAX,EAA8C;AACjDT,iBAAK,EAAE,KAAKA,KADqC;AAEjDC,mBAAO,EAAE,EAFwC;AAGjDC,uBAAW,EAAE,KAAKG,SAH+B;AAIjDF,mBAAO,EAAE,KAAKA,OAJmC;AAKjDC,oBAAQ,EAAEiB;AALuC,WAA9C;AAOJ,SAXC,EAYDI,IAZC,CAYKG,QAAD,IAAc;AAClBhB,iBAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,iBAAO,CAACiB,KAAR,CAAc,CAAC,KAAK7B,KAAN,EACd,KAAKC,OADS,EAEd,KAAKC,WAFS,EAGd,KAAKC,OAHS,EAId,KAAKC,QAJS,CAAd;AAKAQ,iBAAO,CAACC,GAAR,CAAYe,QAAQ,CAAC7B,IAArB;AACA,cAAIwB,MAAK,GAAIK,QAAQ,CAAC7B,IAAtB;;AACA,cAAIwB,MAAK,IAAK,IAAd,EAAoB;AAClBO,iBAAK,CAAC,iBAAD,CAAL;AAEF;AACD,SAzBC,EA0BDC,KA1BC,CA0BMC,KAAD,IAAW;AAChBpB,iBAAO,CAACC,GAAR,CAAYmB,KAAZ;AACD,SA5BC;AA6BD,OAjCK,EAiCH,KAjCG,CAAN;;AAmCA,UAAIf,IAAJ,EAAU;AACR,cAAME,MAAM,CAACc,aAAP,CAAqBhB,IAArB,CAAN;AACAiB,kBAAU,CAAC,MAAM;AAEjBC,kBAAQ,CAACC,MAAT;AAEC,SAJS,EAIP,IAJO,CAAV;AAQN;;AACI1C,WAAI,CACD2C,GADH,CACO,iCADP,EAC0C,EAD1C,EAEGZ,IAFH,CAESG,QAAD,IAAc;AAClBhB,eAAO,CAACC,GAAR,CAAYe,QAAQ,CAAC7B,IAArB;AACD,OAJH,EAKGgC,KALH,CAKUC,KAAD,IAAW;AAChBF,aAAK,CAACE,KAAD,CAAL;AACApB,eAAO,CAACC,GAAR,CAAYmB,KAAZ;AACD,OARH;AAUH;;AAnEM;AAdI,CAAf","names":["axios","require","name","components","props","data","title","user_id","category_id","content","img_post","categorie","methods","closeCreatePost","$emit","post","event","preventDefault","console","log","preview","document","querySelector","file","files","reader","FileReader","image","addEventListener","result","fetch","then","res","blob","response","table","alert","catch","error","readAsDataURL","setTimeout","location","reload","get"],"sourceRoot":"","sources":["/home/fanny/Rendu2/C-COD-280-PAR-2-2-dashboard-vladimira.grosjean/Dashboard2/src/components/CreatePost.vue"],"sourcesContent":["<template>\r\n<div class=\"container backdrop\"><!--v-if='login' -->\r\n<div class=\"createPostForm\">\r\n  \r\n<button  type=\"button\" class=\"btn btn-outline-dark mb-1\" data-mdb-ripple-color=\"dark\" @click=\"closeCreatePost\"><i  style=\"float: right; font-size: 20px;\" class=\"bi bi-x-lg\"></i></button>\r\n    \r\n        <form v-on:submit.prevent=\"post\">\r\n        <!-- Name input -->\r\n        <div class=\"form-outline mb-4\">\r\n          <input  v-model=\"title\" type=\"text\" id=\"title\" class=\"form-control border\" />\r\n          <label class=\"form-label\" for=\"title\">Title</label>\r\n        </div>\r\n        \r\n          \r\n        <!-- Message input -->\r\n        <div class=\"form-outline mb-4\">\r\n          <textarea v-model=\"content\" class=\"form-control border\" id=\"content\" rows=\"4\"></textarea>\r\n          <label class=\"form-label\" >Content</label>\r\n        </div>\r\n     \r\n      <!-- Image Upload -->\r\n      <div class=\"form-outline mb-4\">\r\n        <label class=\"form-label\" for=\"img_post\"> Post Image</label>\r\n        <input type=\"file\" v-on:change=\"getImgPost\" id=\"img_post\" class=\"form-control border\" />\r\n      </div>\r\n          <!-- <input type=\"file\" class=\"form-control my-2\" id=\"img_post\" /> -->\r\n\r\n\r\n        <!-- Submit button -->\r\n        <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\">Post</button> \r\n    \r\n</form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst axios = require(\"axios\");\r\nexport default {\r\n  name: \"post\",\r\n  components: {},\r\n   props: ['idUser', 'user_id'],\r\n  data: () => {\r\n    return {\r\n      title: \"\",\r\n      user_id: \"\",\r\n      category_id: \"\",\r\n      content: \"\",\r\n      img_post: \"\",\r\n      categorie: \"\",\r\n          };\r\n  },\r\n  methods: {\r\n    closeCreatePost(){\r\n      this.$emit('close')\r\n    },\r\n    async post(event) {     \r\n      event.preventDefault();\r\n      console.log(this.user_id);\r\n      const preview = document.querySelector('img_post');\r\n        const file = document.querySelector('input[type=file]').files[0];\r\n        const reader = new FileReader();\r\n        let image = '';\r\n        await reader.addEventListener(\"load\", async () => {\r\n          // on convertit l'image en une chaîne de caractères base64\r\n          image = reader.result;\r\n          console.log(image);\r\n          fetch(image)\r\n          .then(res => res.blob())\r\n          .then(blob => {\r\n            console.log(blob)\r\n             axios.post(\"http://localhost:8000/api/posts\", {\r\n          title: this.title,\r\n          user_id: '',\r\n          category_id: this.categorie,\r\n          content: this.content,\r\n          img_post: image,\r\n            })          \r\n        })\r\n        .then((response) => {\r\n          console.log('table')\r\n          console.table([this.title,\r\n          this.user_id,\r\n          this.category_id,\r\n          this.content,\r\n          this.img_post])\r\n          console.log(response.data);\r\n          var result = response.data;\r\n          if (result != null) {\r\n            alert(\"Post bien créé!\");\r\n            \r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n        }, false);\r\n\r\n        if (file) {\r\n          await reader.readAsDataURL(file);\r\n          setTimeout(() => {\r\n\r\n          location.reload()\r\n\r\n          }, 2000);\r\n\r\n\r\n          \r\n    }\r\n        axios\r\n          .get(\"http://localhost:8000/api/posts\", {})\r\n          .then((response) => {\r\n            console.log(response.data);\r\n          })\r\n          .catch((error) => {\r\n            alert(error);\r\n            console.log(error);\r\n          });\r\n          \r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.createPostForm {\r\n  width: 50%;\r\n  padding: 20px;\r\n  margin: 100px auto;\r\n  background: white;\r\n}\r\n.backdrop {\r\n  top: 0;\r\n  position: fixed;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}