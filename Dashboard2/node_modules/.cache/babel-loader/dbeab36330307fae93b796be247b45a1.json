{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"container loginForm\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"ul\", {\n  class: \"nav nav-pills nav-justified mb-3\",\n  id: \"ex1\",\n  role: \"tablist\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"tab-content shadow-lg p-3 mb-5 bg-white rounded\"\n};\nconst _hoisted_5 = {\n  method: \"put\"\n};\nconst _hoisted_6 = {\n  class: \"form-group mb-1\"\n};\nconst _hoisted_7 = {\n  class: \"form-group mb-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\"v-if='login-admin' \"), _createCommentVNode(\" Pills navs \"), _hoisted_3, _createCommentVNode(\" Pills navs \"), _createCommentVNode(\" Pills content \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"form\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.title = $event),\n    type: \"email\",\n    class: \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Edit title ...\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.title]])]), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.content = $event),\n    class: \"form-control\",\n    id: \"exampleFormControlTextarea1\",\n    placeholder: \"Edit content ...\",\n    rows: \"3\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.content]])]), _createCommentVNode(\" Submit button \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.update && $options.update(...args)),\n    type: \"submit\",\n    class: \"btn btn-primary btn-block mb-3\"\n  }, \"Edit\")])])])]);\n}","map":{"version":3,"mappings":";;AAEKA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;gCAEbC,oBAEK,IAFL,EAEK;AAFDD,OAAK,EAAC,kCAEL;AAFwCE,IAAE,EAAC,KAE3C;AAFiDC,MAAI,EAAC;AAEtD,CAFL;;AAAA;;;AAMKH,OAAK,EAAC;;;AAEDI,QAAM,EAAC;;;AAENJ,OAAK,EAAC;;;AAIRA,OAAK,EAAC;;;uBAjBfK,oBA4BQ,KA5BR,cA4BQ,CA3BNJ,oBA0BI,KA1BJ,cA0BI,CA1B6BK,0CA0B7B,EAzBJA,mCAyBI,EAxBNC,UAwBM,EArBND,mCAqBM,EAnBNA,sCAmBM,EAlBNL,oBAiBM,KAjBN,cAiBM,CAfFA,oBAaO,MAbP,cAaO,CAXLA,oBAEE,KAFF,cAEE,iBADJA,oBAA2I,OAA3I,EAA2I;+DAA3HO,aAAKC,OAAsH;AAApHC,QAAI,EAAC,OAA+G;AAAvGV,SAAK,EAAC,cAAiG;AAAlFE,MAAE,EAAC,oBAA+E;AAA1D,wBAAiB,WAAyC;AAA7BS,eAAW,EAAC;AAAiB,GAA3I;;AAAA,oBAAgBH,aACZ,CAFF,CAWK,EAPPP,oBAEI,KAFJ,cAEI,iBADJA,oBAAsI,UAAtI,EAAsI;+DAAnHO,eAAOC,OAA4G;AAA1GT,SAAK,EAAC,cAAoG;AAArFE,MAAE,EAAC,6BAAkF;AAAnDS,eAAW,EAAC,kBAAuC;AAApBC,QAAI,EAAC;AAAe,GAAtI;;AAAA,oBAAmBJ,eACf,CAFJ,CAOO,EAFLF,sCAEK,EADLL,oBAA0F,QAA1F,EAA0F;AAAjFY,WAAK,yCAAEC,2CAAF,CAA4E;AAAlEJ,QAAI,EAAC,QAA6D;AAApDV,SAAK,EAAC;AAA8C,GAA1F,EAA6E,MAA7E,CACK,CAbP,CAeE,CAjBN,CAkBM,CA1BJ,CA2BM,CA5BR","names":["class","_createElementVNode","id","role","method","_createElementBlock","_createCommentVNode","_hoisted_3","_ctx","$event","type","placeholder","rows","onClick","$options"],"sourceRoot":"","sources":["/home/fanny/Rendu2/C-COD-280-PAR-2-2-dashboard-vladimira.grosjean/Dashboard2/src/views/CrudAdmin/CrudUpdatePost.vue"],"sourcesContent":["<template>\n\n<div class=\"container\">\n  <div class=\"container loginForm\"><!--v-if='login-admin' -->\n  <!-- Pills navs -->\n<ul class=\"nav nav-pills nav-justified mb-3\" id=\"ex1\" role=\"tablist\">\n  \n</ul>\n<!-- Pills navs -->\n\n<!-- Pills content -->\n<div class=\"tab-content shadow-lg p-3 mb-5 bg-white rounded\">\n\n    <form method='put'>\n      \n      <div class=\"form-group mb-1\">\n    <input v-model=\"title\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Edit title ...\">\n  </div>\n\n    <div class=\"form-group mb-2\">\n    <textarea v-model=\"content\" class=\"form-control\" id=\"exampleFormControlTextarea1\"  placeholder=\"Edit content ...\" rows=\"3\"></textarea>\n  </div>\n\n\n      <!-- Submit button -->\n      <button @click=\"update\" type=\"submit\" class=\"btn btn-primary btn-block mb-3\">Edit</button>\n    </form>\n\n</div>\n</div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nconst axios = require('axios');\nexport default {\n  name: \"CrudUpdatePost\",\n  components: {},\n  props: [\"id\"],\n  data: () => {\n    return {\n      title: \"\",\n      user_id:\"\",\n      category_id: \"\",\n      content: \"\",\n      img_post:\"\",\n    };\n  },\n  methods: {\n    update(event){\n      event.preventDefault()\n      axios.put('http://localhost:8000/api/posts/' + this.id, {\n        title: this.title,\n        user_id:this.user_id,\n        category_id: this.category_id,\n        content:this.content,\n        img_post: this.img_post,\n      })\n      .then((response) => {\n        console.log(response.data);\n        var result = response.data;\n        if (result != null){\n          alert(\"Post modifié !\")\n          window.location.reload();\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(\"error\", error.response.data);\n      })\n    },\n\n  }\n};\n</script>\n<style>\n.loginForm{\n  width: 50%;\n  margin-top: 150px;\n}\n</style>\n\n async update(event) {     \n      event.preventDefault();\n      const preview = document.querySelector('img_post');\n        const file = document.querySelector('input[type=file]').files[0];\n        const reader = new FileReader();\n        let image = '';\n        await reader.addEventListener(\"load\", async () => {\n          // on convertit l'image en une chaîne de caractères base64\n          image = reader.result;\n          console.log(image);\n          fetch(image)\n          .then(res => res.blob())\n          .then(blob => {\n            console.log(blob)\n             axios.put(\"http://localhost:8000/api/posts\" + this.id, {\n          title: this.title,\n          user_id: '',\n          category_id: this.categorie,\n          content: this.content,\n          img_post: image,\n            })          \n        })\n        .then((response) => {\n        console.log(response.data);\n        var result = response.data;\n        if (result != null){\n          alert(\"Post modifié !\")\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(\"error\", error.response.data);\n      })\n        }, false);\n\n        if (file) {\n          await reader.readAsDataURL(file);\n          console.log(reader);\n          console.log(image);\n          \n    }\n        axios\n          .get(\"http://localhost:8000/api/posts\", {})\n          .then((response) => {\n            console.log(response.data);\n          })\n          .catch((error) => {\n            alert(error);\n            console.log(error);\n          });\n          \n    },\n  },\n};"]},"metadata":{},"sourceType":"module"}