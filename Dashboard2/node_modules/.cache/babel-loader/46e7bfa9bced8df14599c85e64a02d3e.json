{"ast":null,"code":"import NavBar from '../components/NavBar.vue';\nimport setAdmin from '../Services/auth_service.js';\nimport setUser from '../Services/auth_service.js'; // @ is an alias to /src\n\nconst axios = require('axios');\n\nexport default {\n  name: \"Register\",\n  components: {\n    NavBar\n  },\n  data: () => {\n    return {\n      firstname: \"\",\n      lastname: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\"\n    };\n  },\n  methods: {\n    async signin(event) {\n      event.preventDefault(); //const file = document.querySelector('input[type=file]').files[0];\n      //const reader = new FileReader();\n      //let avatarUser = '';\n\n      await reader.addEventListener(\"load\", async () => {\n        // on convertit l'image en une chaîne de caractères base64\n        //avatarUser = reader.result;\n        //console.log(avatarUser);\n        axios.post(\"http://localhost:3000/users\", {\n          firstname: this.firstname,\n          lastname: this.lastname,\n          username: this.username,\n          email: this.email,\n          //avatar: avatarUser,\n          password: this.password,\n          password_confirmation: this.password_confirmation\n        }).then(response => {\n          console.log(response); // console.table([this.title,\n          // this.user_id,\n          // this.category_id,\n          // this.content,\n          // this.img_post])\n          // console.log(response.data);\n\n          var result = response.data;\n\n          if (result != null) {\n            alert(\"User bien créé!\");\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }, false);\n      axios.get(\"http://localhost:3000/users\", {}).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        alert(error);\n        console.log(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyDA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB,C,CAEA;;AACA,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAD,CAArB;;AACA,eAAe;AACbC,MAAI,EAAE,UADO;AAEbC,YAAU,EAAE;AAACN;AAAD,GAFC;AAGbO,MAAI,EAAE,MAAM;AACV,WAAO;AACLC,eAAS,EAAE,EADN;AAELC,cAAQ,EAAE,EAFL;AAGLC,cAAQ,EAAC,EAHJ;AAILC,WAAK,EAAE,EAJF;AAKLC,cAAQ,EAAE,EALL;AAMLC,2BAAqB,EAAE;AANlB,KAAP;AAQD,GAZY;AAabC,SAAO,EAAE;AACP,UAAMC,MAAN,CAAaC,KAAb,EAAoB;AAClBA,WAAK,CAACC,cAAN,GADkB,CAEhB;AACA;AACA;;AACA,YAAMC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AAChD;AACA;AACA;AAEGhB,aAAK,CAACiB,IAAN,CAAW,6BAAX,EAA0C;AACvCZ,mBAAS,EAAE,KAAKA,SADuB;AAEvCC,kBAAQ,EAAE,KAAKA,QAFwB;AAGvCC,kBAAQ,EAAC,KAAKA,QAHyB;AAIvCC,eAAK,EAAE,KAAKA,KAJ2B;AAKvC;AACAC,kBAAQ,EAAE,KAAKA,QANwB;AAOvCC,+BAAqB,EAAE,KAAKA;AAPW,SAA1C,EAUJQ,IAVI,CAUEC,QAAD,IAAc;AACjBC,iBAAO,CAACC,GAAR,CAAYF,QAAZ,EADiB,CAElB;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAIG,MAAK,GAAIH,QAAQ,CAACf,IAAtB;;AACA,cAAIkB,MAAK,IAAK,IAAd,EAAoB;AAClBC,iBAAK,CAAC,iBAAD,CAAL;AAEF;AACD,SAxBI,EAyBJC,KAzBI,CAyBGC,KAAD,IAAW;AAChBL,iBAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,SA3BI;AA4BJ,OAjCK,EAiCH,KAjCG,CAAN;AAmCAzB,WAAI,CACD0B,GADH,CACO,6BADP,EACsC,EADtC,EAEGR,IAFH,CAESC,QAAD,IAAc;AAClBC,eAAO,CAACC,GAAR,CAAYF,QAAQ,CAACf,IAArB;AACD,OAJH,EAKGoB,KALH,CAKUC,KAAD,IAAW;AAChBF,aAAK,CAACE,KAAD,CAAL;AACAL,eAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,OARH;AAUH;;AAnDM;AAbI,CAAf","names":["NavBar","setAdmin","setUser","axios","require","name","components","data","firstname","lastname","username","email","password","password_confirmation","methods","signin","event","preventDefault","reader","addEventListener","post","then","response","console","log","result","alert","catch","error","get"],"sourceRoot":"","sources":["/home/fanny/Rendu2/C-COD-280-PAR-2-2-dashboard-vladimira.grosjean/Dashboard2/src/views/Register.vue"],"sourcesContent":["<template>\n\n<div class=\"container\">\n  <NavBar />\n  <div class=\"container loginForm\">\n  <!-- Pills navs -->\n<ul class=\"nav nav-pills nav-justified mb-3\" id=\"ex1\" role=\"tablist\">\n  \n</ul>\n<!-- Pills navs -->\n\n<!-- Pills content -->\n<div class=\"tab-content\">\n\n    <form>\n\n\n      <!-- Firstname input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"firstname\" type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Firstname\">\n    </div>\n\n     <!-- Lastname input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"lastname\" type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Lastname\">\n    </div>\n\n      <!-- Username input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Username\">\n    </div>\n\n      <!-- Email input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"email\" type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Email\">\n    </div>\n\n      <!-- Password input -->\n        <div class=\"form-group mb-1\">\n    <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Password\">\n    </div>\n\n      <!-- Repeat Password input -->\n        <div class=\"form-group mb-2\">\n    <input v-model=\"password_confirmation\" type=\"password\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Password\">\n    </div>\n\n      <!-- Submit button -->\n      <button @click=\"signin\" type=\"submit\" class=\"btn btn-primary btn-block mb-3\">Sign in</button>\n    </form>\n\n</div>\n</div>\n  </div>\n</template>\n\n<script>\nimport NavBar from '../components/NavBar.vue';\nimport setAdmin from '../Services/auth_service.js';\nimport setUser from '../Services/auth_service.js';\n\n// @ is an alias to /src\nconst axios = require('axios');\nexport default {\n  name: \"Register\",\n  components: {NavBar},\n  data: () => {\n    return {\n      firstname: \"\",\n      lastname: \"\",\n      username:\"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n    };\n  },\n  methods: {\n    async signin(event) {     \n      event.preventDefault();\n        //const file = document.querySelector('input[type=file]').files[0];\n        //const reader = new FileReader();\n        //let avatarUser = '';\n        await reader.addEventListener(\"load\", async () => {\n          // on convertit l'image en une chaîne de caractères base64\n          //avatarUser = reader.result;\n          //console.log(avatarUser);\n       \n             axios.post(\"http://localhost:3000/users\", {\n                firstname: this.firstname,\n                lastname: this.lastname,\n                username:this.username,\n                email: this.email,\n                //avatar: avatarUser,\n                password: this.password,\n                password_confirmation: this.password_confirmation\n            })          \n        \n        .then((response) => {\n           console.log(response)\n          // console.table([this.title,\n          // this.user_id,\n          // this.category_id,\n          // this.content,\n          // this.img_post])\n          // console.log(response.data);\n          \n          var result = response.data;\n          if (result != null) {\n            alert(\"User bien créé!\");\n            \n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        }, false);\n\n        axios\n          .get(\"http://localhost:3000/users\", {})\n          .then((response) => {\n            console.log(response.data);\n          })\n          .catch((error) => {\n            alert(error);\n            console.log(error);\n          });\n          \n    },\n  },\n};\n</script>\n<style>\n.loginForm{\n  width: 50%;\n  margin-top: 150px;\n}\n</style>\n\nasync signin(event) {     \n      event.preventDefault();\n      const preview = document.querySelector('avatar');\n        const file = document.querySelector('input[type=file]').files[0];\n        const reader = new FileReader();\n        let avatarUser = '';\n        await reader.addEventListener(\"load\", async () => {\n          // on convertit l'image en une chaîne de caractères base64\n          avatarUser = reader.result;\n          console.log(avatarUser);\n          fetch(avatarUser)\n          .then(res => res.blob())\n          .then(blob => {\n            console.log(blob)\n             axios.post(\"http://localhost:8000/api/users\", {\n                name: this.name,\n                nickname:this.nickname,\n                email: this.email,\n                avatar: avatarUser,\n                password: this.password,\n                password_confirmation: this.password_confirmation\n            })          \n        })\n        .then((response) => {\n          // console.log('table')\n          // console.table([this.title,\n          // this.user_id,\n          // this.category_id,\n          // this.content,\n          // this.img_post])\n          // console.log(response.data);\n          var result = response.data;\n          if (result != null) {\n            alert(\"User bien créé!\");\n            location.reload();\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        }, false);\n\n        if (file) {\n          await reader.readAsDataURL(file);\n          console.log(reader);\n          console.log(avatarUser);\n          \n    }\n        axios\n          .get(\"http://localhost:8000/api/users\", {})\n          .then((response) => {\n            console.log(response.data);\n          })\n          .catch((error) => {\n            alert(error);\n            console.log(error);\n          });\n          \n    },\n  },\n};"]},"metadata":{},"sourceType":"module"}